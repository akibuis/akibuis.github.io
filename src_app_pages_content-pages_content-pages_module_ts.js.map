{"version":3,"file":"src_app_pages_content-pages_content-pages_module_ts.js","mappings":"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","sources":["../../Trigonal%20GIT/Green%20Indie%20Angular%2013/src/app/pages/content-pages/content-pages-routing.module.ts","../../Trigonal%20GIT/Green%20Indie%20Angular%2013/src/app/pages/content-pages/content-pages.module.ts","../../Trigonal%20GIT/Green%20Indie%20Angular%2013/src/app/pages/content-pages/error/error-page.component.ts","../../Trigonal%20GIT/Green%20Indie%20Angular%2013/src/app/pages/content-pages/error/error-page.component.html","../../Trigonal%20GIT/Green%20Indie%20Angular%2013/src/app/pages/content-pages/login/login-page.component.ts","../../Trigonal%20GIT/Green%20Indie%20Angular%2013/src/app/pages/content-pages/login/login-page.component.html","../../Trigonal%20GIT/Green%20Indie%20Angular%2013/src/app/pages/content-pages/register/register/register.component.ts","../../Trigonal%20GIT/Green%20Indie%20Angular%2013/src/app/pages/content-pages/register/register/register.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ErrorPageComponent } from \"./error/error-page.component\";\r\nimport { LoginPageComponent } from \"./login/login-page.component\";\r\nimport { RegisterComponent } from './register/register/register.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'error',\r\n        component: ErrorPageComponent,\r\n        data: {\r\n          title: 'Error Page'\r\n        }\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: LoginPageComponent,\r\n        data: {\r\n          title: 'Login Page'\r\n        }\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: RegisterComponent,\r\n        data: {\r\n          title: 'Login Page'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ContentPagesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\nimport { ContentPagesRoutingModule } from \"./content-pages-routing.module\";\r\n\r\nimport { ErrorPageComponent } from \"./error/error-page.component\";\r\nimport { LoginPageComponent } from \"./login/login-page.component\";\nimport { RegisterComponent } from './register/register/register.component';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ContentPagesRoutingModule,\r\n        FormsModule ,\r\n        ReactiveFormsModule,\r\n        NgbModule,\r\n        NgxSpinnerModule\r\n    ],\r\n    declarations: [\r\n        ErrorPageComponent,\r\n        LoginPageComponent,\r\n        RegisterComponent\r\n    ]\r\n})\r\nexport class ContentPagesModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-error-page',\r\n    templateUrl: './error-page.component.html',\r\n    styleUrls: ['./error-page.component.scss']\r\n})\r\n\r\nexport class ErrorPageComponent {\r\n\r\n}","<!--Error page starts-->\r\n<section id=\"error\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row auth-height full-height-vh\">\r\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 text-center\">\r\n            <img src=\"assets/img/gallery/error.png\" alt=\"\" class=\"img-fluid error-img mt-2\" height=\"300\" width=\"400\">\r\n            <h1 class=\"mt-4\">404 - Page Not Found!</h1>\r\n            <div class=\"w-75 error-text mx-auto mt-4\">\r\n              <p>The page you are looking for might have beel removed, had it's name changed, or is temporarily unavailable.</p>\r\n            </div>\r\n            <a [routerLink]=\"['/']\" class=\"btn btn-warning my-2\">Back To Home</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Error page ends-->\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from 'app/shared/services/auth.service';\r\nimport { AlertService } from 'app/shared/services/alert.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MySharedEvent } from 'app/shared/services/shared-events.service';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss']\r\n})\r\n\r\nexport class LoginPageComponent {\r\n\r\n  loginFormSubmitted = false;\r\n  isLoginFailed = false;\r\n\r\n  obj = { email: '', password: '' };\r\n\r\n  loginForm = new FormGroup({\r\n    username: new FormControl('guest@apex.com', [Validators.required]),\r\n    password: new FormControl('Password', [Validators.required]),\r\n    rememberMe: new FormControl(true)\r\n  });\r\n\r\n  constructor(private _auth: AuthService, protected router: Router, private _router: Router,\r\n    private alert: AlertService, private events: MySharedEvent) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\r\n      return false;\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    swal.showLoading();\r\n    this._auth.loginUser(this.obj)\r\n      .subscribe(\r\n        res => {\r\n          localStorage.setItem('token', res.data.token);\r\n          localStorage.setItem('userinfo', res.data.lastname + ', ' + res.data.firstname);\r\n          localStorage.setItem('role', res.data.role);\r\n          localStorage.setItem('userid', res.data._id);\r\n          localStorage.setItem('userphoto', res.data.image);\r\n          this._router.navigate(['dashboard'])\r\n          this.alert.success(res.message);\r\n        },\r\n        err => {\r\n          console.log(err);\r\n          this.alert.error(err.error.message)\r\n          // swal.fire(\r\n          //   'Something went wrong!',\r\n          //   err.error.message,\r\n          //   'error',\r\n          // );\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n}\r\n","<!--Login Page Starts-->\r\n\r\n  <div class=\"row auth-height full-height-vh m-0\">\r\n    <div class=\"col-12 align-items-center justify-content-center\">\r\n      <div class=\"card overflow-hidden\">\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body auth-img\">\r\n            <div class=\"row m-0\">\r\n              <div class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center auth-img-bg p-3 vhy\">\r\n                <!-- <img src=\"assets/img/gallery/login.png\" alt=\"\" class=\"img-fluid\" width=\"300\" height=\"230\"> -->\r\n              </div>\r\n              <div class=\"col-lg-6 d-lg-flex justify-content-center align-items-center px-4 py-3 vhy\">\r\n                <div>\r\n                  <h4 class=\"mb-2 card-title\">Login</h4>\r\n                  <p>Welcome back, please login to your account.</p>\r\n                  <ngb-alert type=\"light-danger\" class=\"mb-2\" *ngIf=\"isLoginFailed\" (close)=\"isLoginFailed = false\">\r\n                    <p class=\"mb-0\">Login failed!</p>\r\n                  </ngb-alert>\r\n                  <!-- <form [formGroup]=\"loginForm\">\r\n                    <div class=\"form-group\">\r\n                      <input type=\"text\" formControlName=\"username\" class=\"form-control\" placeholder=\"Username\"\r\n                        [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.username.invalid, 'is-valid': loginFormSubmitted && !lf.username.invalid }\"\r\n                        required>\r\n                      <div *ngIf=\"loginFormSubmitted && (lf.username.invalid || lf.username.errors?.required)\"\r\n                        class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> This is\r\n                        required</div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Old Password\"\r\n                        [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.password.invalid, 'is-valid': loginFormSubmitted && !lf.password.invalid }\"\r\n                        required>\r\n                      <div *ngIf=\"loginFormSubmitted && (lf.password.invalid || lf.password.errors?.required)\"\r\n                        class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> This is required\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"d-sm-flex justify-content-between mb-3 font-small-2\">\r\n                      <div class=\"remember-me mb-2 mb-sm-0\">\r\n                        <div class=\"checkbox auth-checkbox\">\r\n                          <input type=\"checkbox\" formControlName=\"rememberMe\" class=\"form-control\" id=\"rememberMe\">\r\n                          <label for=\"rememberMe\"><span class=\"font-small-2 mb-3 font-weight-normal\">Remember\r\n                              Me</span></label>\r\n                        </div>\r\n                      </div>\r\n                      <a href=\"javascript:;\">Forgot Password?</a>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-between flex-sm-row flex-column\">\r\n                      <a href=\"javascript:;\" class=\"btn bg-light-primary mb-2 mb-sm-0\">Register</a>\r\n                      <a class=\"btn btn-primary\" (click)=\"onSubmit()\">Login</a>\r\n                    </div>\r\n                  </form> -->\r\n\r\n                  <form class=\"auth-login-form mt-2\" #form=\"ngForm\" (submit)=\"onSubmit()\" name=\"form\">\r\n                    <div class=\"mb-1\">\r\n                      <label class=\"form-label\" for=\"login-email\">Email</label>\r\n                      <input class=\"form-control\" id=\"login-email\" type=\"text\" [(ngModel)]=\"obj.email\" name=\"email\"\r\n                        placeholder=\"email\" aria-describedby=\"login-email\" autofocus=\"\" tabindex=\"1\" />\r\n                    </div>\r\n                    <div class=\"mb-1\">\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <label class=\"form-label \"  for=\"login-password\">Password</label><a href=\"/\"><small>Forgot\r\n                            Password?</small></a>\r\n                      </div>\r\n                      <div class=\"input-group input-group-merge form-password-toggle\">\r\n                        <input class=\"form-control form-control-merge\" id=\"password\" type=\"password\" id=\"password\"\r\n                          placeholder=\"Password\" [(ngModel)]=\"obj.password\" name=\"password\" required\r\n                          aria-describedby=\"login-password\" tabindex=\"2\" /><span class=\"input-group-text cursor-pointer\"><i\r\n                            data-feather=\"eye\"></i></span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"mb-1\">\r\n                      <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" id=\"remember-me\" type=\"checkbox\" tabindex=\"3\" />\r\n                        <label class=\"form-check-label\" for=\"remember-me\">\r\n                          Remember Me</label>\r\n                      </div>\r\n                    </div>\r\n                    <button class=\"btn btn-success  w-100\" tabindex=\"4\" type=\"submit\" [disabled]=\"form.invalid\" >\r\n                      Sign in\r\n                    </button>\r\n                  </form>\r\n                  <hr>\r\n                  <div class=\"d-flex justify-content-between align-items-center\">\r\n                    <h6 class=\"text-success m-0\">\r\n                    <span>New on our platform?</span><a routerLink=\"/pages/register\"><span>&nbsp;Create an account</span></a></h6>\r\n                    <ngx-spinner></ngx-spinner>\r\n                    <!-- <div class=\"login-options\">\r\n                      <a class=\"btn btn-sm btn-social-icon btn-facebook mr-1\"><span class=\"fa fa-facebook\"></span></a>\r\n                      <a class=\"btn btn-sm btn-social-icon btn-twitter mr-1\"><span class=\"fa fa-twitter\"></span></a>\r\n                    </div> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n<!--Login Page Ends-->","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertService } from 'app/shared/services/alert.service';\nimport { AuthService } from 'app/shared/services/auth.service';\nimport { MySharedEvent } from 'app/shared/services/shared-events.service';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  loginFormSubmitted = false;\n  isLoginFailed = false;\n\n\n\n  obj = {\n    firstname: \"\",\n    lastname: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    phone: \"\",\n    // dOb: \"\",\n  };\n\n  loginForm = new FormGroup({\n    username: new FormControl('guest@apex.com', [Validators.required]),\n    password: new FormControl('Password', [Validators.required]),\n    rememberMe: new FormControl(true)\n  });\n\n  constructor(private _auth: AuthService, protected router: Router, private _router: Router,\n    private alert: AlertService, private events: MySharedEvent) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n  }\n\n  ngOnInit() {\n\n  }\n\n\n  onSubmit() {\n    swal.showLoading();\n    this._auth.registerUser(this.obj)\n      .subscribe(\n        (res) => {\n          // console.log(res);\n          // localStorage.setItem(\"token\", res.data.token);\n          // localStorage.setItem(\n          //   \"userinfo\",\n          //   res.data.lastname + \", \" + res.data.firstname\n          // );\n          // localStorage.setItem(\"role\", res.data.role);\n          // localStorage.setItem(\"userid\", res.data._id);\n  \n          // if (res.data.role === \"admin\") {\n          //   this._router.navigate([\"dashboard\"]);\n          // } else {\n            this._router.navigate([\"/pages/login\"]);\n          // }\n          this.alert.success(res.message);\n        },\n        err => {\n          console.log(err);\n          this.alert.error(err.error.message)\n          // swal.fire(\n          //   'Something went wrong!',\n          //   err.error.message,\n          //   'error',\n          // );\n        }\n      );\n  }\n\n\n}\n","<!--Login Page Starts-->\n\n<div class=\"row auth-height full-height-vh m-0\">\n    <div class=\"col-12 align-items-center justify-content-center\">\n      <div class=\"card overflow-hidden\">\n        <div class=\"card-content\">\n          <div class=\"card-body auth-img\">\n            <div class=\"row m-0\">\n              <div class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center auth-img-bg p-3 vhy\">\n                <!-- <img src=\"assets/img/gallery/login.png\" alt=\"\" class=\"img-fluid\" width=\"300\" height=\"230\"> -->\n              </div>\n              <div class=\"col-lg-6 d-lg-flex justify-content-center align-items-center px-4 py-3 vhy\">\n                <div>\n                  <h4 class=\"mb-2 card-title\">Login</h4>\n                  <p>Welcome back, please login to your account.</p>\n                  <ngb-alert type=\"light-danger\" class=\"mb-2\" *ngIf=\"isLoginFailed\" (close)=\"isLoginFailed = false\">\n                    <p class=\"mb-0\">Login failed!</p>\n                  </ngb-alert>\n                  <!-- <form [formGroup]=\"loginForm\">\n                    <div class=\"form-group\">\n                      <input type=\"text\" formControlName=\"username\" class=\"form-control\" placeholder=\"Username\"\n                        [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.username.invalid, 'is-valid': loginFormSubmitted && !lf.username.invalid }\"\n                        required>\n                      <div *ngIf=\"loginFormSubmitted && (lf.username.invalid || lf.username.errors?.required)\"\n                        class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> This is\n                        required</div>\n                    </div>\n                    <div class=\"form-group\">\n                      <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Old Password\"\n                        [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.password.invalid, 'is-valid': loginFormSubmitted && !lf.password.invalid }\"\n                        required>\n                      <div *ngIf=\"loginFormSubmitted && (lf.password.invalid || lf.password.errors?.required)\"\n                        class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> This is required\n                      </div>\n                    </div>\n                    <div class=\"d-sm-flex justify-content-between mb-3 font-small-2\">\n                      <div class=\"remember-me mb-2 mb-sm-0\">\n                        <div class=\"checkbox auth-checkbox\">\n                          <input type=\"checkbox\" formControlName=\"rememberMe\" class=\"form-control\" id=\"rememberMe\">\n                          <label for=\"rememberMe\"><span class=\"font-small-2 mb-3 font-weight-normal\">Remember\n                              Me</span></label>\n                        </div>\n                      </div>\n                      <a href=\"javascript:;\">Forgot Password?</a>\n                    </div>\n                    <div class=\"d-flex justify-content-between flex-sm-row flex-column\">\n                      <a href=\"javascript:;\" class=\"btn bg-light-primary mb-2 mb-sm-0\">Register</a>\n                      <a class=\"btn btn-primary\" (click)=\"onSubmit()\">Login</a>\n                    </div>\n                  </form> -->\n\n\n                  <form class=\"auth-login-form mt-2\" #form=\"ngForm\" (submit)=\"onSubmit()\" name=\"form\">\n\n                    <div class=\"row\">\n                      <div class=\"col-md-6 col-12\">\n                        <div class=\"mb-1\">\n                          <label class=\"form-label\" for=\"firstname\">First Name</label>\n                          <input class=\"form-control\" id=\"firstname\" type=\"text\" [(ngModel)]=\"obj.firstname\"\n                            name=\"firstname\" placeholder=\"firstname\" aria-describedby=\"login-firstname\" autofocus=\"\"\n                            tabindex=\"1\" />\n                        </div>\n                      </div>\n                      <div class=\"col-md-6 col-12\">\n                        <div class=\"mb-1\">\n                          <label class=\"form-label\" for=\"lastname\">Last Name</label>\n                          <input class=\"form-control\" id=\"lastname\" type=\"text\" [(ngModel)]=\"obj.lastname\" name=\"lastname\"\n                            placeholder=\"lastname\" aria-describedby=\"lastname\" autofocus=\"\" tabindex=\"2\" />\n                        </div>\n                      </div>\n                      <div class=\"col-md-6 col-12\">\n                        <div class=\"mb-1\">\n                          <label class=\"form-label\" for=\"username\">Stage Name</label>\n                          <input class=\"form-control\" id=\"username\" type=\"text\" [(ngModel)]=\"obj.username\" name=\"username\"\n                            placeholder=\"Stage Name\" aria-describedby=\"username\" autofocus=\"\" tabindex=\"3\" />\n                        </div>\n                      </div>\n                      <div class=\"col-md-6 col-12\">\n                        <div class=\"mb-1\">\n                          <label class=\"form-label\" for=\"Email\">E-mail</label>\n                          <input class=\"form-control\" id=\"email\" type=\"text\" [(ngModel)]=\"obj.email\" name=\"email\"\n                            placeholder=\"E-mail\" aria-describedby=\"email\" autofocus=\"\" tabindex=\"4\" />\n                        </div>\n                      </div>\n                      <div class=\"col-md-6 col-12\">\n                        <div class=\"mb-1\">\n                          <label class=\"form-label\" for=\"company-column\">Phone Number</label>\n                          <input class=\"form-control\" id=\"phone\" type=\"text\" [(ngModel)]=\"obj.phone\" name=\"phone\"\n                            placeholder=\"phone\" aria-describedby=\"phone\" autofocus=\"\" tabindex=\"5\" />\n                        </div>\n                      </div>\n                      <!-- <div class=\"col-md-6 col-12\">\n                        <div class=\"mb-1\">\n                          <label class=\"form-label\" for=\"phone\">Date of Birth</label>\n                          <input class=\"form-control\" id=\"dOb\" type=\"text\" [(ngModel)]=\"obj.dOb\" name=\"dOb\"\n                            placeholder=\"Date of Birth\" aria-describedby=\"dOb\" autofocus=\"\" tabindex=\"6\" />\n                        </div>\n                      </div> -->\n    \n                      <div class=\"col-md-6 col-12\">\n    \n                        <div class=\"mb-1\">\n                          <label class=\"form-label\" for=\"paswword\">Password</label>\n                          <div class=\"input-group input-group-merge form-password-toggle\">\n                            <input class=\"form-control form-control-merge\" id=\"password\" type=\"text\"\n                              name=\"password\" placeholder=\"\" [(ngModel)]=\"obj.password\"\n                              aria-describedby=\"password\" tabindex=\"7\" aria-invalid=\"false\"><span\n                              class=\"input-group-text cursor-pointer\">\n                              <i data-feather=\"eye\"></i>\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n    \n                      <div class=\"col-md-6 col-12\">\n                        <div class=\"mb-1\">\n                          <div class=\"d-flex justify-content-between\">\n                            <label class=\"form-label\" for=\"confirmPassword\">Confirm Password</label>\n                          </div>\n                          <div class=\"input-group input-group-merge form-password-toggle\">\n                            <input class=\"form-control form-control-merge\" id=\"confirmPassword\" type=\"confirmPassword\" id=\"confirmPassword\"\n                              placeholder=\"\" [(ngModel)]=\"obj.confirmPassword\" name=\"confirmPassword\" required aria-describedby=\"confirmPassword\"\n                              tabindex=\"8\" /><span class=\"input-group-text cursor-pointer\"><i data-feather=\"eye\"></i></span>\n                          </div>\n                        </div>\n                      </div>\n    \n                    </div>\n    \n    \n                    <div class=\"mb-1\">\n                      <div class=\"form-check\">\n                        <input class=\"form-check-input\" id=\"remember-me\" type=\"checkbox\" required tabindex=\"9\" />\n                        <label class=\"form-check-label\" for=\"remember-me\">\n                          I agree to privacy policy & terms</label>\n                      </div>\n                    </div>\n    \n                    <button class=\"btn btn-success w-100\" tabindex=\"10\" type=\"submit\" [disabled]=\"form.invalid\">\n                      Create Account\n                    </button>\n    \n                  </form>\n                  <hr>\n                  <div class=\"d-flex justify-content-between align-items-center\">\n                    <h6 class=\"text-success m-0\">\n                    <span>Have an Account?</span><a routerLink=\"/pages/login\"><span>&nbsp;Sign In</span></a></h6>\n                    <ngx-spinner></ngx-spinner>\n                    <!-- <div class=\"login-options\">\n                      <a class=\"btn btn-sm btn-social-icon btn-facebook mr-1\"><span class=\"fa fa-facebook\"></span></a>\n                      <a class=\"btn btn-sm btn-social-icon btn-twitter mr-1\"><span class=\"fa fa-twitter\"></span></a>\n                    </div> -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n<!--Login Page Ends-->"],"names":["RouterModule","ErrorPageComponent","LoginPageComponent","RegisterComponent","routes","path","children","component","data","title","ContentPagesRoutingModule","forChild","imports","exports","CommonModule","FormsModule","ReactiveFormsModule","NgbModule","NgxSpinnerModule","ContentPagesModule","declarations","selectors","decls","vars","consts","template","i0","FormGroup","FormControl","Validators","swal","_auth","router","_router","alert","events","email","password","username","required","rememberMe","routeReuseStrategy","shouldReuseRoute","showLoading","loginUser","obj","subscribe","localStorage","setItem","res","token","lastname","firstname","role","_id","image","navigate","success","message","console","log","err","error","ctx","confirmPassword","phone","registerUser"],"sourceRoot":"webpack:///"}